Oracle和MySQL的管理方式
	Oracle:一个实例下，创建用户，每个用户绑定一个表空间，表空间中建立表，以用户（表空间）为单位，用户下建表空间下建表
	MySQL：直接在MySQL中建立数据库，在库下创建表，一个用户root，目前是这样，以库为单位，一个用户下建多个库下建表

Oracle中一般情况不区分大小写，特殊情况除外（表中的数据存的是大写就是大写，小写就是小写），其他情况你写大小写无所谓的，
因为Oracle中所有的都是大写，你输入的小写字母在编译的时候都会给你编译成大写的再执行，当然''内的东西就是字符，是无法给你变成大写的，是什么就是什么
所以说，数据是大写就是大写，小写就是小写，也就是非引号的内容不会变成大写，表中数据存的什么就是什么
比如这一句是查看函数的源脚本的
	select name,line,text from user_source where name='DEMO'; 我创建函数的时候是demo小写的，但是编译会把他变成大写
	因为创建的时候这个名称你没有用引号，所以他会转，你查的时候名字就不能是小写的了，必须用大写，因为存的数据就是大写的
	并且在引号里面，所以引号中的数据严格区分大小写

聚合函数和分组函数
	对一组值执行计算并返回单一的值
	聚合函数和分组函数都是描述的同一个概念，就是多行查询结果 聚合计算成一个结果返回，
	是查到多行返回一个结果，所以就涉及到按某个列进行分组的问题。

select...into 语句只会返回一条语句，并赋值到变量

函数不能用来操作数据库

in out inout的理解
	in 只可以传入参数
	out 只可以返回参数
	in out 又可以传入也可以返回，in和out能干的他都能干
获取out返回的参数
	默认是通过return返回参数，要获取out返回的参数，就是说你可以打印输出他的值，获取直接打印就好了，就可以获取看到他返回的值了
	通俗一点，return就是执行完函数自动就返回这个值，也就是说这个函数就是return的值，out参数就是

函数和存储过程
	函数：必须要有返回值，并且只能返回一个值，除非你用out再返回值，return只能返回一个值，也必须要有一个return返回值
		函数不能操作数据库，即不能改变数据库的数据，可以作为表达式的一部分，可以在语句中使用，也可以在pl/sql块中使用
		但是不能独立运行
	存储过程：没有return语句返回值，只能用out 或者in out就是out 返回参数，
		可以操作数据库，即可以改变数据库的数据
		调用方法也和函数差不多,并且可以独立运行，也可以作为表达式的一部分，可以在语句中使用，也可以在pl/sql块中使用
		但是不能独立运行
		函数有的基本都有（没有return语句）还有函数没有的，比函数强大，但是各有用处，当只返回一个值的时候用函数
	独立运行的定义：就是说你不用配合任何语句，直接调用这个存储过程就能运行，比如说定义一个过程叫做test，你不需要配合语句
		什么select test 之类的，或者在代码块中，你直接就像执行conn命令一样，直接调用就可以运行，而函数就不行，必须要配合
		语句使用，不能独立运行

静态游标的概念（备份的概念）：
	是指将一个状态下的数据复制一份，这个复制的数据就会一直保持当时的状态存储，如果你更改原来的数据，备份的这个数据也不会改变
	他始终保持备份时的状态
	可以说备份后的数据是静态的，因为他不会因为任何原因发送改变（除了删除覆盖这些不可抗力的方式），不会因为更改源数据而改变
	始终是保持备份时的状态，所以是静态的
	静态游标就相当于一个备份，所以说备份后的数据就相当于一个快照，将当时的状态备份，得到的备份就是一个结果集，是静态的
	结果集是静态的，所以叫做静态游标
	
	游标就相当于一个指针，指向结果集中的一条记录，静态游标就是指向一个静态的结果集，静态游标就相当于一个数据快照，打开游标
	的结果集就是对数据库的一个备份，备份时静态的不会改变状态，所以是静态游标

静态游标-显示游标
	使用之前必须要有游标声明和定义，定义就相当于创建一个快照，他会关联数据库查询语句，返回一行或多行记录，对这些数据生成一个
	相当于备份的结果集（其中的一部分数据，一个结果集，是静态的，相当于源数据的一个备份，这个备份是对部分的数据进行备份）
	打开游标后，因为结果集是静态的，所以就可以明确知道每个位置上的数据，每个位置上的数据也是固定的，就可以通过游标，相当于指针
	检索这些数据，然后得到单一的一行记录（相当于数组，每个位置只可能有一个数据，集合也一样，在一个位置上只可能一条记录，所以这里游标
	也是只可能在每个位置上只有一条记录），用户就可以操作此记录
	关闭游标后，就不能对结果集做任何操作了

游标可以让用户像操作数组一样操作查询出来的数据集，这样操作更方便，因为操作数组就很方便，操作数组中的数据也很方便，操作结果集就和操作数组一样

如果视图不是只读，可以修改数据，进行dml操作，实际上操作的是视图的源表（或者说基表）的数据

字典表的定义
	就是说这张表存放的数据一般都是固定的，记录着一些基本的信息，就像汉语字典一样，基本是固定的，偶尔会更新，频率很少
	需要数据就查，需要更新他的情况很少

Oracle中的排序问题 默认是无序的
	示例 select * from scores order by score DESC;（desc不区分大小写）
	order by 默认是asc的
	asc 升序
	desc 降序

在使用函数或运算表达式时必须指定列的别名

存储过程的执行：begin 过程名 end；或者 exec(过程名);

语句级触发器：
	只要这个语句是删除语句，就会触发删除事件这个触发器，而这个语句有没有修改数据，没有必然的联系
	只有行触发器才会根据你修改的有数据，才会触发这个触发器，真实修改了一条数据就会触发一次




































